[{"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/index.js":"1","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/store/storeManager.js":"2","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/App.js":"3","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/rootReducer.js":"4","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Navbar.js":"5","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/NewForm.js":"6","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/actions/action.js":"7","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/generatedForm/FormGeneration.js":"8","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/formHandler.js":"9","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queTypeUpdater.js":"10","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queHandler.js":"11","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueTemplate.js":"12","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueType.js":"13","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/SingleTypeQue.js":"14","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ParaTypeQue.js":"15","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/MultiTypeQue.js":"16","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/AdditionalTypeQue.js":"17","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ControlPanel.js":"18","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Response.js":"19","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Home.js":"20","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Login.js":"21","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Signup.js":"22"},{"size":452,"mtime":1614336175733,"results":"23","hashOfConfig":"24"},{"size":538,"mtime":1613828299569,"results":"25","hashOfConfig":"24"},{"size":4010,"mtime":1614352418652,"results":"26","hashOfConfig":"24"},{"size":304,"mtime":1613828299569,"results":"27","hashOfConfig":"24"},{"size":487,"mtime":1614079497312,"results":"28","hashOfConfig":"24"},{"size":3957,"mtime":1614353924925,"results":"29","hashOfConfig":"24"},{"size":926,"mtime":1613828299540,"results":"30","hashOfConfig":"24"},{"size":2073,"mtime":1613828299565,"results":"31","hashOfConfig":"24"},{"size":482,"mtime":1613828299568,"results":"32","hashOfConfig":"24"},{"size":1796,"mtime":1614351620419,"results":"33","hashOfConfig":"24"},{"size":2259,"mtime":1614351423439,"results":"34","hashOfConfig":"24"},{"size":5358,"mtime":1613983613382,"results":"35","hashOfConfig":"24"},{"size":2222,"mtime":1614111136964,"results":"36","hashOfConfig":"24"},{"size":4966,"mtime":1614008291928,"results":"37","hashOfConfig":"24"},{"size":1413,"mtime":1613981607474,"results":"38","hashOfConfig":"24"},{"size":4942,"mtime":1613983682879,"results":"39","hashOfConfig":"24"},{"size":1965,"mtime":1614024266299,"results":"40","hashOfConfig":"24"},{"size":1506,"mtime":1614112500770,"results":"41","hashOfConfig":"24"},{"size":5604,"mtime":1614340648562,"results":"42","hashOfConfig":"24"},{"size":1410,"mtime":1614361348223,"results":"43","hashOfConfig":"24"},{"size":2900,"mtime":1614361131412,"results":"44","hashOfConfig":"24"},{"size":2648,"mtime":1614361123372,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1eilvo2",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/index.js",[],["100","101"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/store/storeManager.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/App.js",["102","103","104"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/rootReducer.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Navbar.js",["105"],"import React from \"react\";\nimport \"../css/navbarStyle.css\";\n\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <nav className=\"navBar\">\n                <span id=\"siteName\">Form Control</span>\n                <div className=\"navBarBtnCont\">\n                    <span className=\"navBarBtn\">About</span>\n                    \n                </div>\n\n            </nav>\n\n        );\n    }\n}\n","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/NewForm.js",["106","107","108"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/actions/action.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/generatedForm/FormGeneration.js",["109","110","111","112","113","114"],"import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\n\nclass FormGeneration extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let queInfoObj = this.props.queInfo[this.props.formID];\n\n        let queTypeObj = this.props.queType[this.props.formID];\n        let arrayType = [];\n\n        let form = Object.keys(queTypeObj).map((queKey, index) => {\n\n\n\n            // arrayType.push(queTypeObj[key]);\n            if (queTypeObj[queKey] == \"text\") {\n                // queInfoObj[queKey];\n                return <Fragment><div className=\"queCont\" >\n                    <div>Q.{index + 1} {queInfoObj[queKey].question}</div>\n                    <input></input>\n                </div >\n\n                </Fragment >\n\n\n            }\n            if (queTypeObj[queKey] == \"radio\" || queTypeObj[queKey] == \"checkbox\") {\n                let optionsKey = Object.keys(queInfoObj[queKey].options);\n                // optionsKey.pop();\n\n                return (<Fragment><div className=\"queCont\" >\n                    <div>Q.{index + 1} {queInfoObj[queKey].question}</div>\n                    <div>\n                        {optionsKey.map((optionKey) => {\n                            return (<div>\n                                <input type={queTypeObj[queKey]} name={queKey} /> <span>{queInfoObj[queKey].options[optionKey]}</span>\n                            </div>)\n\n                        })}\n                    </div>\n\n                </div >\n\n                </Fragment >);\n\n            }\n\n\n\n        })\n\n        return (\n\n            <form>\n                Hello\n                {form}\n            </form>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log('state', state)\n    return {\n        queType: state.queTypeUpdater,\n        queInfo: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        // dispatchFilledForm: (para) => dispatch(filledForm(para))\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(FormGeneration);\n",["115","116"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/formHandler.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queTypeUpdater.js",["117","118","119"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queHandler.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueTemplate.js",["120","121","122","123","124","125","126","127","128","129","130","131"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport MultiTypeQue from \"./MultiTypeQue\";\nimport SingleTypeQue from \"./SingleTypeQue\";\nimport ParaTypeQue from \"./ParaTypeQue\";\nimport AdditionalTypeQue from \"./AdditionalTypeQue.js\";\n// import \"../js/jsForStyling\"\nimport { queType, removeQue } from \"../actions/action\";\n\n\nclass QueTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQueInversion = this.handleQueInversion.bind(this);\n    this.removeQuestion = this.removeQuestion.bind(this);\n\n    // this.displayOptions= this.displayOptions.bind(this);\n\n\n\n  }\n  \n//  displayOptions(event){\n//      console.log('event.target', event.target.id)\n\n//   // document.querySelector(`#${event.target.id} > .dropdownQue `).style.visibility=\"hidden\";\n\n//  }\n\n  handleQueInversion(event) {\n    let queNo = event.target.id;\n    console.log('event.target.value', event.target.name)\n    // ReactDOM.findDOMNode(event.target).className = \"dropdown-item active\";\n\n    this.props.dispatchQueInversion({\n      type: event.target.name,\n      payload: {\n        formID: this.props.formID,\n        questionNo: queNo,\n\n      }\n    });\n  }\n\n  removeQuestion(event) {\n    let queNo = event.target.id;\n\n    // let queObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n    // // console.log('optionsObj', optionsObj)\n    // let optionsKey = Object.keys(queObj);\n    // delete queObj[queNo];\n\n    this.props.dispatchRemoveQuestion({\n      type: \"removeQue\",\n      payload: {\n\n        formID: this.props.formID,\n        questionNo: queNo,\n\n      }\n    });\n\n  }\n\n  render() {\n    // const { queDetails } = this.props;\n    console.log('inside QT', this.props.queTypeUpdater)\n    let formKeys = Object.keys(this.props.queTypeUpdater);\n    console.log('formKeys', formKeys)\n    \n    \n    let que = formKeys.map((element, index) => {\n      console.log('object', (this.props.formID == parseInt(element)))\n      if (this.props.formID == parseInt(element)) {\n        let queKeys = Object.keys(this.props.queTypeUpdater[element]);\n        console.log('INSIDE IF')\n        \n        return queKeys.map((elm, ind) => {\n          let regex= new RegExp(this.props.queTypeUpdater[element][parseInt(elm)],\"g\")\n          \n          return (\n            <div  id={`queCont${elm}`} className=\"queCont\" key={ind}>\n              <div className=\"dropdownQue\">\n                <button type=\"button\" class=\"btn btn-secondary shadow-none\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Change Type</button>\n\n                <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\n                  <li><a className=\"dropdown-item\" name=\"text\" value=\"text\" id={parseInt(elm)} onClick={this.handleQueInversion}>Paragraph</a></li>\n\n                  <li><a className=\"dropdown-item\" name=\"radio\" value=\"radio\" id={parseInt(elm)} onClick={this.handleQueInversion}>Single Option</a></li>\n\n                  <li><a className=\"dropdown-item\" name=\"checkbox\" value=\"checkbox\" id={parseInt(elm)} onClick={this.handleQueInversion}>Multiple Option</a></li>\n                  <li><a className=\"dropdown-item\" name=\"email\" value=\"email\" id={parseInt(elm)} onClick={this.handleQueInversion}>Email</a></li>\n                  <li><a className=\"dropdown-item\" name=\"tel\" value=\"tel\" id={parseInt(elm)} onClick={this.handleQueInversion}>Phone No.</a></li>\n\n                </ul>\n                <button id={parseInt(elm)} onClick={this.removeQuestion} class=\"btn btn-danger queCross shadow-none\">\n                &#x2715;\n              </button>\n              </div>\n              {\n                this.props.queTypeUpdater[element][parseInt(elm)] == \"text\" ? <ParaTypeQue formID={this.props.formID} queNo={parseInt(elm) } /> : null\n              }\n\n              {\n                this.props.queTypeUpdater[element][parseInt(elm)] == \"radio\" ? <SingleTypeQue formID={this.props.formID} queNo={parseInt(elm)} /> : null\n              }\n\n              {\n                this.props.queTypeUpdater[element][parseInt(elm)] == \"checkbox\" ? <MultiTypeQue formID={this.props.formID} queNo={parseInt(elm)} /> : null\n              }\n              {\n                regex.test(\"emailtel\") ? <AdditionalTypeQue formID={this.props.formID} queNo={parseInt(elm)} Type={this.props.queTypeUpdater[element][parseInt(elm)]} /> : null\n              }\n              {/* \n              <select id={parseInt(elm)} onChange={this.handleQueInversion} >\n                <option select >Change Question Type</option>\n                <option name=\"text\" value=\"text\">Para</option>\n                <option name=\"checkbox\" value=\"checkbox\"> CheckBOx</option>\n                <option name=\"radio\" value=\"radio\">Radio</option>\n\n              </select> */}\n\n\n\n\n\n\n\n\n\n\n\n            </div>\n          )\n        })\n      }\n    })\n\n\n\n    return <div  className=\"allQueCont\">{que}</div>;\n  }\n\n\n\n\n}\n\nconst mapStatetoProps = (state) => {\n  // console.log('Indise quetemplate', state)\n  return {\n    queTypeUpdater: state.queTypeUpdater\n  }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n  return {\n    dispatchQueInversion: (para) => dispatch(queType(para)),\n    dispatchRemoveQuestion: (para) => dispatch(removeQue(para))\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(QueTemplate);\n","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueType.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/SingleTypeQue.js",["132","133","134"],"import React, { Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { queAction } from \"../actions/action.js\";\n\n\n\nlet question = \"Question\", opId, options, noOfOps = 1;\nclass SingleTypeQue extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleQueInfo = this.handleQueInfo.bind(this);\n        this.handleOptionInfo = this.handleOptionInfo.bind(this);\n        this.removeOption = this.removeOption.bind(this);\n        this.addOption = this.addOption.bind(this);\n    }\n\n    handleQueInfo(event) {\n\n        question = event.target.value;\n        console.log('placeholder', question)\n\n\n\n\n        let queInfo = {\n            type: \"single\",\n\n            payload: {\n                data: {\n\n                    options: this.props.queHandler[this.props.formID][this.props.queNo].options,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n        }\n        this.props.dispatchQueInfo(queInfo);\n\n\n\n\n    }\n\n    handleOptionInfo(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let optionsKey = Object.keys(optionsObj);\n\n\n\n        optionsObj[event.target.id] = event.target.value;\n\n\n        let optionInfo = {\n            type: \"single\",\n\n            payload: {\n                data: {\n\n                    options: optionsObj,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n    }\n\n    addOption() {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        console.log('optionsObj', optionsObj)\n        let optionsKey = Object.keys(optionsObj);\n        optionsKey = parseInt(optionsKey[optionsKey.length - 1])\n        console.log('optionsKey', optionsKey)\n\n\n\n\n\n        let optionInfo = {\n            type: \"single\",\n\n            payload: {\n                data: {\n\n                    options: { [optionsKey + 1]: \"Option\" },\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n\n    }\n\n    removeOption(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        console.log('optionsObj', optionsObj)\n        let optionsKey = Object.keys(optionsObj);\n\n        if (optionsKey.length !== 1) {\n\n            delete optionsObj[event.target.id];\n\n            let optionInfo = {\n                type: \"single\",\n\n                payload: {\n                    data: {\n\n                        options: optionsObj,\n\n                        question,\n                    },\n\n                    formID: this.props.formID,\n                    questionNo: this.props.queNo,\n\n\n                }\n\n\n            }\n            this.props.dispatchQueInfo(optionInfo);\n        }\n\n\n\n\n    }\n    render() {\n\n        // noOfOps = this.props.queHandler[this.props.formID][this.props.queNo].noOfOps\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        console.log('optionsObj', optionsObj)\n        let optionsKey = Object.keys(optionsObj);\n        console.log('optionsKey', optionsKey)\n\n\n        options = optionsKey.map((data, index) => {\n            return <Fragment>\n\n\n                <div class=\"form-check optionsCont\" key={data} id={data}>\n                    <input class=\"form-check-input optionsIcon\" type=\"radio\" name=\"flexRadioDefault\" />\n\n                    <input type=\"text\" className=\"optionInput\" defaultValue={optionsObj[data]} id={data} onBlur={this.handleOptionInfo}></input> <button onClick={this.removeOption} id={data} class=\"btn shadow-none optionCancelBtn \">&#x2715;</button>\n\n                </div>\n\n\n                {/* <input type=\"radio\" name=\"option\" ></input> */}\n\n            </Fragment>\n\n\n        })\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        console.log('queData', queData)\n        return (<Fragment>\n            <div className=\"questionCont\">Q. <input type=\"text\" className=\"queInput\" name='question' onBlur={this.handleQueInfo} defaultValue={queData.question}></input>\n            </div>\n\n\n            {options}\n            <button onClick={this.addOption} class=\"btn btn-primary shadow-none addOption\">Add Option</button>\n        </Fragment>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(\"state inside ParaTYpeQes\", state)\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(SingleTypeQue);\n\n\n\n","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ParaTypeQue.js",["135"],"import React, { Fragment } from 'react';\nimport { queAction } from \"../actions/action.js\";\nimport { connect } from \"react-redux\";\n\nlet question, counter = 0;\n\nclass ParaTypeQue extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleInfo = this.handleInfo.bind(this);\n        \n    }\n    handleInfo(event) {\n        question = event.target.value;\n        console.log('placeholder', question)\n        let queInfo = {\n            type: \"para\",\n            payload: {\n                data: { question },\n                formID: this.props.formID,\n                questionNo: this.props.queNo\n            }\n\n        }\n\n\n        this.props.dispatchQueInfo(queInfo);\n\n    }\n\n    render() {\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        return (<Fragment><div className=\"questionCont\" >Q. <input className=\"queInput\" type=\"text\" onChange={this.handleInfo} defaultValue={queData.question} /></div>\n            <div className=\"answerCont\">Answer</div>\n        </Fragment>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(\"state inside ParaTYpeQes\", state)\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(ParaTypeQue);","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/MultiTypeQue.js",["136","137","138"],"import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { queAction } from \"../actions/action.js\";\n\nlet question = \"Question\", opId, options, noOfOps = 1;\nclass MultiTypeQue extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleQueInfo = this.handleQueInfo.bind(this);\n        this.handleOptionInfo = this.handleOptionInfo.bind(this);\n        this.removeOption = this.removeOption.bind(this);\n        this.addOption = this.addOption.bind(this);\n    }\n\n    handleQueInfo(event) {\n\n        question = event.target.value;\n        console.log('placeholder', question)\n\n\n\n\n        let queInfo = {\n            type: \"multi\",\n\n            payload: {\n                data: {\n\n                    options: this.props.queHandler[this.props.formID][this.props.queNo].options,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n        }\n        this.props.dispatchQueInfo(queInfo);\n\n\n\n\n    }\n\n    handleOptionInfo(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let optionsKey = Object.keys(optionsObj);\n\n\n\n        optionsObj[event.target.id] = event.target.value;\n\n\n        let optionInfo = {\n            type: \"multi\",\n\n            payload: {\n                data: {\n\n                    options: optionsObj,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n    }\n\n    addOption() {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        console.log('optionsObj', optionsObj)\n        let optionsKey = Object.keys(optionsObj);\n        optionsKey = parseInt(optionsKey[optionsKey.length - 1])\n        console.log('optionsKey', optionsKey)\n\n\n\n\n\n        let optionInfo = {\n            type: \"multi\",\n\n            payload: {\n                data: {\n\n                    options: { [optionsKey + 1]: \"Option\" },\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n\n    }\n\n    removeOption(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        console.log('optionsObj', optionsObj)\n        let optionsKey = Object.keys(optionsObj);\n\n        if (optionsKey.length !== 1) {\n\n            delete optionsObj[event.target.id];\n\n            let optionInfo = {\n                type: \"multi\",\n\n                payload: {\n                    data: {\n\n                        options: optionsObj,\n\n                        question,\n                    },\n\n                    formID: this.props.formID,\n                    questionNo: this.props.queNo,\n\n\n                }\n\n\n            }\n            this.props.dispatchQueInfo(optionInfo);\n        }\n\n\n\n\n    }\n    render() {\n\n        // noOfOps = this.props.queHandler[this.props.formID][this.props.queNo].noOfOps\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        console.log('optionsObj', optionsObj)\n        let optionsKey = Object.keys(optionsObj);\n        console.log('optionsKey', optionsKey)\n\n\n        options = optionsKey.map((data, index) => {\n            return <Fragment>\n                <div key={data} id={data} class=\"form-check optionsCont\">\n                    <input class=\"form-check-input optionsIcon\" type=\"checkbox\" value=\"\" />\n                    <input type=\"text\" defaultValue={optionsObj[data]} id={data} onBlur={this.handleOptionInfo} className=\"optionInput\"></input><button onClick={this.removeOption} id={data} class=\"btn shadow-none optionCancelBtn\">&#x2715;</button>\n\n                    {/* <input type=\"checkbox\" name=\"option\" ></input> */}\n                </div>\n\n            </Fragment>\n\n\n        })\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        console.log('queData', queData)\n        return (<Fragment>\n            <div className=\"questionCont\">Q. <input type=\"text\" className=\"queInput\" name='question' onBlur={this.handleQueInfo} defaultValue={queData.question}></input>\n            </div>\n\n\n            {options}\n            <button onClick={this.addOption} class=\"btn btn-primary shadow-none addOption\">Add Option</button>\n        </Fragment>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(\"state inside ParaTYpeQes\", state)\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(MultiTypeQue);","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/AdditionalTypeQue.js",["139","140","141","142"],"import React,{Fragment} from 'react';\nimport { queAction } from \"../actions/action.js\";\nimport { connect } from \"react-redux\";\n\nlet question, counter = 0;\n\nclass AdditionlTypeQue extends React.Component{\n\n    constructor(props) {\n        super(props)\n    \n        this.handleInfo = this.handleInfo.bind(this);\n\n\n\n    }\n    // componentDidMount() {\n    //     if (counter == 0) {\n\n    //         this.props.dispatchQueInfo({\n    //             type: \"para\",\n    //             question: \"Question\",\n    //             formID: this.props.formID,\n    //             questionNo: this.props.queNo + 1\n\n    //         });\n    //     }\n\n    // }\n\n    handleInfo(event) {\n        question = event.target.value;\n        console.log('placeholder', question)\n        let queInfo = {\n            type: \"para\",\n            payload: {\n                data: { question },\n                formID: this.props.formID,\n                questionNo: this.props.queNo\n            }\n\n        }\n\n\n        this.props.dispatchQueInfo(queInfo);\n\n    }\n\n    render() {\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        return (<Fragment>\n            {this.props.Type==\"email\"?<Fragment>\n            <div className=\"addQueCont\"> &nbsp;&nbsp;&nbsp;  email:<div className=\"addAnsCont\">example@gmail.com</div></div>\n            \n            </Fragment>:null}\n            {this.props.Type==\"tel\"?<Fragment>\n            <div className=\"addQueCont\">&nbsp;&nbsp;&nbsp;   phone no:<div className=\"addAnsCont\" >9000800055</div></div>\n            </Fragment>:null}\n        </Fragment>)\n\n\n\n}\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(\"state inside ParaTYpeQes\", state)\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(AdditionlTypeQue);\n\n\n\n\n            ","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ControlPanel.js",["143"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/controlPanelStyle.css';\n\n\nclass ControlPanel extends React.Component {\n    constructor(props) {\n        super(props)\n        this.changeStyle=this.changeStyle.bind(this);\n\n    }\n\n    changeStyle(event){\n        console.log('event.target', event.target)\n\n        if(event.target.id==\"responseBtn\"){\n            document.getElementById(event.target.id).className=\"cntrlPanelBtns active\";\n            document.getElementById(\"formBtn\").className=\"cntrlPanelBtns\";\n            document.getElementById(\"genformBtn\").style.visibility=\"hidden\";\n        }\n\n        else{\n            document.getElementById(event.target.id).className=\"cntrlPanelBtns active\";\n            document.getElementById(\"responseBtn\").className=\"cntrlPanelBtns \";\n            document.getElementById(\"genformBtn\").style.visibility=\"visible\";\n\n        }\n\n    }\n\n    render() {\n        return (\n\n            <div className=\"controlPanel\">\n                <div className=\"pairCont\">\n                <Link onClick={this.changeStyle} id=\"formBtn\" className=\"cntrlPanelBtns active\"to={this.props.formPath}>Form</Link>\n                     <Link  id=\"responseBtn\" onClick={this.changeStyle} className=\"cntrlPanelBtns\" to={`${this.props.formPath}/response`}> Response</Link>\n                </div>\n                <span id=\"genformBtn\" className=\"cntrlPanelBtns generateBtn\">Generate Form</span>\n            </div>\n        )\n    }\n\n}\n\n\nexport default ControlPanel;","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Response.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Home.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Login.js",["144","145","146","147","148","149"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Signup.js",["150","151","152","153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":36,"column":30,"nodeType":"164","messageId":"165","endLine":36,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":70,"column":28,"nodeType":"164","messageId":"165","endLine":70,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":5,"column":5,"nodeType":"168","messageId":"169","endLine":7,"endColumn":6},{"ruleId":"158","severity":1,"message":"170","line":6,"column":24,"nodeType":"160","messageId":"161","endLine":6,"endColumn":31},{"ruleId":"158","severity":1,"message":"171","line":11,"column":50,"nodeType":"160","messageId":"161","endLine":11,"endColumn":54},{"ruleId":"158","severity":1,"message":"172","line":74,"column":13,"nodeType":"160","messageId":"161","endLine":74,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":6,"column":5,"nodeType":"168","messageId":"169","endLine":8,"endColumn":6},{"ruleId":"158","severity":1,"message":"173","line":14,"column":13,"nodeType":"160","messageId":"161","endLine":14,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":16,"column":64,"nodeType":"176","messageId":"177","endLine":16,"endColumn":66},{"ruleId":"178","severity":1,"message":"179","line":21,"column":36,"nodeType":"164","messageId":"180","endLine":21,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":32,"column":36,"nodeType":"164","messageId":"180","endLine":32,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":32,"column":69,"nodeType":"164","messageId":"180","endLine":32,"endColumn":71},{"ruleId":"154","replacedBy":"181"},{"ruleId":"156","replacedBy":"182"},{"ruleId":"158","severity":1,"message":"183","line":2,"column":5,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"184","line":2,"column":16,"nodeType":"160","messageId":"161","endLine":2,"endColumn":24},{"ruleId":"158","severity":1,"message":"185","line":2,"column":26,"nodeType":"160","messageId":"161","endLine":2,"endColumn":33},{"ruleId":"158","severity":1,"message":"186","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":74,"column":45,"nodeType":"176","messageId":"177","endLine":74,"endColumn":47},{"ruleId":"178","severity":1,"message":"179","line":75,"column":48,"nodeType":"164","messageId":"180","endLine":75,"endColumn":50},{"ruleId":"178","severity":1,"message":"179","line":76,"column":29,"nodeType":"164","messageId":"180","endLine":76,"endColumn":31},{"ruleId":"187","severity":1,"message":"188","line":90,"column":23,"nodeType":"189","endLine":90,"endColumn":130},{"ruleId":"187","severity":1,"message":"188","line":92,"column":23,"nodeType":"189","endLine":92,"endColumn":132},{"ruleId":"187","severity":1,"message":"188","line":94,"column":23,"nodeType":"189","endLine":94,"endColumn":138},{"ruleId":"187","severity":1,"message":"188","line":95,"column":23,"nodeType":"189","endLine":95,"endColumn":132},{"ruleId":"187","severity":1,"message":"188","line":96,"column":23,"nodeType":"189","endLine":96,"endColumn":128},{"ruleId":"178","severity":1,"message":"179","line":104,"column":67,"nodeType":"164","messageId":"180","endLine":104,"endColumn":69},{"ruleId":"178","severity":1,"message":"179","line":108,"column":67,"nodeType":"164","messageId":"180","endLine":108,"endColumn":69},{"ruleId":"178","severity":1,"message":"179","line":112,"column":67,"nodeType":"164","messageId":"180","endLine":112,"endColumn":69},{"ruleId":"158","severity":1,"message":"190","line":7,"column":28,"nodeType":"160","messageId":"161","endLine":7,"endColumn":32},{"ruleId":"158","severity":1,"message":"191","line":7,"column":43,"nodeType":"160","messageId":"161","endLine":7,"endColumn":50},{"ruleId":"158","severity":1,"message":"192","line":52,"column":13,"nodeType":"160","messageId":"161","endLine":52,"endColumn":23},{"ruleId":"158","severity":1,"message":"185","line":5,"column":15,"nodeType":"160","messageId":"161","endLine":5,"endColumn":22},{"ruleId":"158","severity":1,"message":"190","line":5,"column":28,"nodeType":"160","messageId":"161","endLine":5,"endColumn":32},{"ruleId":"158","severity":1,"message":"191","line":5,"column":43,"nodeType":"160","messageId":"161","endLine":5,"endColumn":50},{"ruleId":"158","severity":1,"message":"192","line":50,"column":13,"nodeType":"160","messageId":"161","endLine":50,"endColumn":23},{"ruleId":"158","severity":1,"message":"185","line":5,"column":15,"nodeType":"160","messageId":"161","endLine":5,"endColumn":22},{"ruleId":"158","severity":1,"message":"193","line":50,"column":13,"nodeType":"160","messageId":"161","endLine":50,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":53,"column":29,"nodeType":"164","messageId":"180","endLine":53,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":57,"column":29,"nodeType":"164","messageId":"180","endLine":57,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":16,"column":27,"nodeType":"164","messageId":"180","endLine":16,"endColumn":29},{"ruleId":"158","severity":1,"message":"194","line":2,"column":27,"nodeType":"160","messageId":"161","endLine":2,"endColumn":33},{"ruleId":"158","severity":1,"message":"195","line":2,"column":41,"nodeType":"160","messageId":"161","endLine":2,"endColumn":46},{"ruleId":"158","severity":1,"message":"196","line":2,"column":48,"nodeType":"160","messageId":"161","endLine":2,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":12,"endColumn":6},{"ruleId":"187","severity":1,"message":"197","line":53,"column":34,"nodeType":"189","endLine":53,"endColumn":92},{"ruleId":"198","severity":1,"message":"199","line":53,"column":42,"nodeType":"200","messageId":"201","endLine":53,"endColumn":62},{"ruleId":"158","severity":1,"message":"194","line":4,"column":27,"nodeType":"160","messageId":"161","endLine":4,"endColumn":33},{"ruleId":"158","severity":1,"message":"195","line":4,"column":41,"nodeType":"160","messageId":"161","endLine":4,"endColumn":46},{"ruleId":"158","severity":1,"message":"196","line":4,"column":48,"nodeType":"160","messageId":"161","endLine":4,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":12,"endColumn":6},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'queType' is defined but never used.","'Link' is defined but never used.","'res' is assigned a value but never used.","'arrayType' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","unexpected",["202"],["203"],"'somearray' is defined but never used.","'newarray' is defined but never used.","'counter' is assigned a value but never used.","'ReactDOM' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'opId' is defined but never used.","'noOfOps' is assigned a value but never used.","'optionsKey' is assigned a value but never used.","'queData' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]