[{"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/index.js":"1","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/store/storeManager.js":"2","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/App.js":"3","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/rootReducer.js":"4","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Navbar.js":"5","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/NewForm.js":"6","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/actions/action.js":"7","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/generatedForm/FormGeneration.js":"8","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/formHandler.js":"9","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queTypeUpdater.js":"10","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queHandler.js":"11","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueTemplate.js":"12","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueType.js":"13","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/SingleTypeQue.js":"14","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ParaTypeQue.js":"15","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/MultiTypeQue.js":"16","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/AdditionalTypeQue.js":"17","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ControlPanel.js":"18","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Response.js":"19","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Home.js":"20","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Login.js":"21","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Signup.js":"22","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Confirmation.js":"23","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Formlink.js":"24","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/resQueUpdate.js":"25","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/usersResponses.js":"26","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/formUserData.js":"27","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/resLoadingHandler.js":"28","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/reviewHandler.js":"29"},{"size":452,"mtime":1614336175733,"results":"30","hashOfConfig":"31"},{"size":567,"mtime":1614870103576,"results":"32","hashOfConfig":"31"},{"size":5275,"mtime":1614871036775,"results":"33","hashOfConfig":"31"},{"size":639,"mtime":1614870088147,"results":"34","hashOfConfig":"31"},{"size":1560,"mtime":1614874251203,"results":"35","hashOfConfig":"31"},{"size":5219,"mtime":1614871104384,"results":"36","hashOfConfig":"31"},{"size":1497,"mtime":1614868526387,"results":"37","hashOfConfig":"31"},{"size":2073,"mtime":1613828299565,"results":"38","hashOfConfig":"31"},{"size":806,"mtime":1614771262313,"results":"39","hashOfConfig":"31"},{"size":1218,"mtime":1614714150390,"results":"40","hashOfConfig":"31"},{"size":1873,"mtime":1614714165441,"results":"41","hashOfConfig":"31"},{"size":4126,"mtime":1614713792806,"results":"42","hashOfConfig":"31"},{"size":2401,"mtime":1614851728725,"results":"43","hashOfConfig":"31"},{"size":4811,"mtime":1614714605651,"results":"44","hashOfConfig":"31"},{"size":1317,"mtime":1614713807899,"results":"45","hashOfConfig":"31"},{"size":4858,"mtime":1614713876261,"results":"46","hashOfConfig":"31"},{"size":1552,"mtime":1614713972061,"results":"47","hashOfConfig":"31"},{"size":7543,"mtime":1614691592002,"results":"48","hashOfConfig":"31"},{"size":18819,"mtime":1614873289423,"results":"49","hashOfConfig":"31"},{"size":2704,"mtime":1614607294381,"results":"50","hashOfConfig":"31"},{"size":2916,"mtime":1614493429119,"results":"51","hashOfConfig":"31"},{"size":2664,"mtime":1614493501921,"results":"52","hashOfConfig":"31"},{"size":5441,"mtime":1614875688483,"results":"53","hashOfConfig":"31"},{"size":1175,"mtime":1614713888164,"results":"54","hashOfConfig":"31"},{"size":721,"mtime":1614647461676,"results":"55","hashOfConfig":"31"},{"size":918,"mtime":1614710781399,"results":"56","hashOfConfig":"31"},{"size":638,"mtime":1614868285580,"results":"57","hashOfConfig":"31"},{"size":291,"mtime":1614703413831,"results":"58","hashOfConfig":"31"},{"size":752,"mtime":1614871547560,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1eilvo2",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/index.js",[],["131","132"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/store/storeManager.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/App.js",["133","134","135"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/rootReducer.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Navbar.js",["136"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/NewForm.js",["137","138","139","140","141"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/actions/action.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/generatedForm/FormGeneration.js",["142","143","144","145","146","147"],"import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\n\nclass FormGeneration extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let queInfoObj = this.props.queInfo[this.props.formID];\n\n        let queTypeObj = this.props.queType[this.props.formID];\n        let arrayType = [];\n\n        let form = Object.keys(queTypeObj).map((queKey, index) => {\n\n\n\n            // arrayType.push(queTypeObj[key]);\n            if (queTypeObj[queKey] == \"text\") {\n                // queInfoObj[queKey];\n                return <Fragment><div className=\"queCont\" >\n                    <div>Q.{index + 1} {queInfoObj[queKey].question}</div>\n                    <input></input>\n                </div >\n\n                </Fragment >\n\n\n            }\n            if (queTypeObj[queKey] == \"radio\" || queTypeObj[queKey] == \"checkbox\") {\n                let optionsKey = Object.keys(queInfoObj[queKey].options);\n                // optionsKey.pop();\n\n                return (<Fragment><div className=\"queCont\" >\n                    <div>Q.{index + 1} {queInfoObj[queKey].question}</div>\n                    <div>\n                        {optionsKey.map((optionKey) => {\n                            return (<div>\n                                <input type={queTypeObj[queKey]} name={queKey} /> <span>{queInfoObj[queKey].options[optionKey]}</span>\n                            </div>)\n\n                        })}\n                    </div>\n\n                </div >\n\n                </Fragment >);\n\n            }\n\n\n\n        })\n\n        return (\n\n            <form>\n                Hello\n                {form}\n            </form>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log('state', state)\n    return {\n        queType: state.queTypeUpdater,\n        queInfo: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        // dispatchFilledForm: (para) => dispatch(filledForm(para))\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(FormGeneration);\n",["148","149"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/formHandler.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queTypeUpdater.js",["150","151","152"],"import * as actions from \"../actions/action.js\";\nlet somearray, newarray, counter = 0;\nexport const queTypeUpdater = (\n  state = {}, action) => {\n\n\n\n  switch (action.type) {\n    case actions.ADD_TXT:\n\n\n\n      return { ...state, [action.formID]: { ...state[action.formID], [action.questionNo]: action.type } };\n    case actions.ADD_CHECKBOX:\n\n\n\n      return { ...state, [action.formID]: { ...state[action.formID], [action.questionNo]: action.type } };\n\n    case actions.ADD_RADIO:\n\n\n\n      return { ...state, [action.formID]: { ...state[action.formID], [action.questionNo]: action.type } };\n\n    case \"removeQue\":\n\n      let updatedQue = state[action.formID];\n      delete updatedQue[action.questionNo]\n      return { ...state, [action.formID]: { ...updatedQue } };\n\n    // case \"email\":\n    //   return { ...state, [action.formID]: { ...state[action.formID], [action.questionNo]: action.type } };\n\n    // case \"tel\":\n    //     return { ...state, [action.formID]: { ...state[action.formID], [action.questionNo]: action.type } };\n  \n    case \"removeForm\":\n          let updatedState= state;\n          delete updatedState[action.data.formID];\n          return { ...updatedState};\n\n    default:\n      return state;\n  }\n\n}","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/queHandler.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueTemplate.js",["153","154","155","156","157","158","159","160","161","162"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport MultiTypeQue from \"./MultiTypeQue\";\nimport SingleTypeQue from \"./SingleTypeQue\";\nimport ParaTypeQue from \"./ParaTypeQue\";\nimport AdditionalTypeQue from \"./AdditionalTypeQue.js\";\n// import \"../js/jsForStyling\"\nimport { queType, removeQue } from \"../actions/action\";\n\n\nclass QueTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQueInversion = this.handleQueInversion.bind(this);\n    this.removeQuestion = this.removeQuestion.bind(this);\n\n\n\n\n  }\n  \n\n\n  handleQueInversion(event) {\n    let queNo = event.target.id;\n\n    this.props.dispatchQueInversion({\n      type: event.target.name,\n      payload: {\n        formID: this.props.formID,\n        questionNo: queNo,\n\n      }\n    });\n  }\n\n  removeQuestion(event) {\n    let queNo = event.target.id;\n\n\n\n    this.props.dispatchRemoveQuestion({\n      type: \"removeQue\",\n      payload: {\n\n        formID: this.props.formID,\n        questionNo: queNo,\n\n      }\n    });\n\n  }\n\n  render() {\n    let formKeys = Object.keys(this.props.queTypeUpdater);\n    \n    \n    let que = formKeys.map((element, index) => {\n      if (this.props.formID == parseInt(element)) {\n        let queKeys = Object.keys(this.props.queTypeUpdater[element]);\n        \n        return queKeys.map((elm, ind) => {\n          // let regex= new RegExp(this.props.queTypeUpdater[element][parseInt(elm)],\"g\")\n          \n          return (\n            <div  id={`queCont${elm}`} className=\"queCont\" key={ind}>\n              <div className=\"dropdownQue\">\n                <button type=\"button\" class=\"btn btn-secondary shadow-none\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Change Type</button>\n\n                <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\n                  <li><a className=\"dropdown-item\" name=\"text\" value=\"text\" id={parseInt(elm)} onClick={this.handleQueInversion}>Paragraph</a></li>\n\n                  <li><a className=\"dropdown-item\" name=\"radio\" value=\"radio\" id={parseInt(elm)} onClick={this.handleQueInversion}>Single Option</a></li>\n\n                  <li><a className=\"dropdown-item\" name=\"checkbox\" value=\"checkbox\" id={parseInt(elm)} onClick={this.handleQueInversion}>Multiple Option</a></li>\n                  {/* <li><a className=\"dropdown-item\" name=\"email\" value=\"email\" id={parseInt(elm)} onClick={this.handleQueInversion}>Email</a></li>\n                  <li><a className=\"dropdown-item\" name=\"tel\" value=\"tel\" id={parseInt(elm)} onClick={this.handleQueInversion}>Phone No.</a></li> */}\n\n                </ul>\n                <button id={parseInt(elm)} onClick={this.removeQuestion} class=\"btn btn-danger queCross shadow-none\">\n                &#x2715;\n              </button>\n              </div>\n              {\n                this.props.queTypeUpdater[element][parseInt(elm)] == \"text\" ? <ParaTypeQue formID={this.props.formID} queNo={parseInt(elm) } /> : null\n              }\n\n              {\n                this.props.queTypeUpdater[element][parseInt(elm)] == \"radio\" ? <SingleTypeQue formID={this.props.formID} queNo={parseInt(elm)} /> : null\n              }\n\n              {\n                this.props.queTypeUpdater[element][parseInt(elm)] == \"checkbox\" ? <MultiTypeQue formID={this.props.formID} queNo={parseInt(elm)} /> : null\n              }\n              {/* {\n                regex.test(\"emailtel\") ? <AdditionalTypeQue formID={this.props.formID} queNo={parseInt(elm)} Type={this.props.queTypeUpdater[element][parseInt(elm)]} /> : null\n              } */}\n              \n\n\n\n\n\n\n\n\n\n\n\n            </div>\n          )\n        })\n      }\n    })\n\n\n\n    return <div  className=\"allQueCont\">{que}</div>;\n  }\n\n\n\n\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    queTypeUpdater: state.queTypeUpdater\n  }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n  return {\n    dispatchQueInversion: (para) => dispatch(queType(para)),\n    dispatchRemoveQuestion: (para) => dispatch(removeQue(para))\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(QueTemplate);\n","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/QueType.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/SingleTypeQue.js",["163","164","165"],"import React, { Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { queAction } from \"../actions/action.js\";\n\n\n\nlet  opId, options, noOfOps = 1;\nclass SingleTypeQue extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleQueInfo = this.handleQueInfo.bind(this);\n        this.handleOptionInfo = this.handleOptionInfo.bind(this);\n        this.removeOption = this.removeOption.bind(this);\n        this.addOption = this.addOption.bind(this);\n    }\n\n    handleQueInfo(event) {\n\n        let question = event.target.value;\n\n\n        // let question = \"Question\";\n\n        let queInfo = {\n            type: \"single\",\n\n            payload: {\n                data: {\n\n                    options: this.props.queHandler[this.props.formID][this.props.queNo].options,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n        }\n        this.props.dispatchQueInfo(queInfo);\n\n\n\n\n    }\n\n    handleOptionInfo(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let optionsKey = Object.keys(optionsObj);\n        let question= this.props.queHandler[this.props.formID][this.props.queNo].question;\n\n\n        optionsObj[event.target.id] = event.target.value;\n\n\n        let optionInfo = {\n            type: \"single\",\n\n            payload: {\n                data: {\n\n                    options: optionsObj,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n    }\n\n    addOption() {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let question = this.props.queHandler[this.props.formID][this.props.queNo].question;\n\n        let optionsKey = Object.keys(optionsObj);\n        optionsKey = parseInt(optionsKey[optionsKey.length - 1])\n\n\n\n\n\n        let optionInfo = {\n            type: \"single\",\n\n            payload: {\n                data: {\n\n                    options: { [optionsKey + 1]: \"Option\" },\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n\n    }\n\n    removeOption(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let question = this.props.queHandler[this.props.formID][this.props.queNo].question;\n\n        let optionsKey = Object.keys(optionsObj);\n\n        if (optionsKey.length !== 1) {\n\n            delete optionsObj[event.target.id];\n\n            let optionInfo = {\n                type: \"single\",\n\n                payload: {\n                    data: {\n\n                        options: optionsObj,\n\n                        question,\n                    },\n\n                    formID: this.props.formID,\n                    questionNo: this.props.queNo,\n\n\n                }\n\n\n            }\n            this.props.dispatchQueInfo(optionInfo);\n        }\n\n\n\n\n    }\n    render() {\n\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let optionsKey = Object.keys(optionsObj);\n\n\n        options = optionsKey.map((data, index) => {\n            return <Fragment>\n\n\n                <div class=\"form-check optionsCont\" key={data} id={data}>\n                    <input class=\"form-check-input optionsIcon\" type=\"radio\" name=\"flexRadioDefault\" />\n\n                    <input type=\"text\" className=\"optionInput\" defaultValue={optionsObj[data]} id={data} onChange={this.handleOptionInfo}></input> <button onClick={this.removeOption} id={data} class=\"btn shadow-none optionCancelBtn \">&#x2715;</button>\n\n                </div>\n\n\n                {/* <input type=\"radio\" name=\"option\" ></input> */}\n\n            </Fragment>\n\n\n        })\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        return (<Fragment>\n            <div className=\"questionCont\">Q. <input type=\"text\" className=\"queInput\" name='question' onChange={this.handleQueInfo} defaultValue={queData.question}></input>\n            </div>\n\n\n            {options}\n            <button onClick={this.addOption} class=\"btn btn-primary shadow-none addOption\">Add Option</button>\n        </Fragment>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(SingleTypeQue);\n\n\n\n","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ParaTypeQue.js",["166"],"import React, { Fragment } from 'react';\nimport { queAction } from \"../actions/action.js\";\nimport { connect } from \"react-redux\";\n\nlet question, counter = 0;\n\nclass ParaTypeQue extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleInfo = this.handleInfo.bind(this);\n        \n    }\n    handleInfo(event) {\n        question = event.target.value;\n        console.log('placeholder', question)\n        let queInfo = {\n            type: \"para\",\n            payload: {\n                data: { question },\n                formID: this.props.formID,\n                questionNo: this.props.queNo\n            }\n\n        }\n\n\n        this.props.dispatchQueInfo(queInfo);\n\n    }\n\n    render() {\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        return (<Fragment><div className=\"questionCont\" >Q. <input className=\"queInput\" type=\"text\" onChange={this.handleInfo} defaultValue={queData.question} /></div>\n            <div className=\"answerCont\">Answer</div>\n        </Fragment>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(\"state inside ParaTYpeQes\", state)\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(ParaTypeQue);","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/MultiTypeQue.js",["167","168","169"],"import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { queAction } from \"../actions/action.js\";\n\nlet  opId, options, noOfOps = 1;\nclass MultiTypeQue extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleQueInfo = this.handleQueInfo.bind(this);\n        this.handleOptionInfo = this.handleOptionInfo.bind(this);\n        this.removeOption = this.removeOption.bind(this);\n        this.addOption = this.addOption.bind(this);\n    }\n\n    handleQueInfo(event) {\n\n        let question = event.target.value;\n     \n\n\n\n\n        let queInfo = {\n            type: \"multi\",\n\n            payload: {\n                data: {\n\n                    options: this.props.queHandler[this.props.formID][this.props.queNo].options,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n        }\n        this.props.dispatchQueInfo(queInfo);\n\n\n\n\n    }\n\n    handleOptionInfo(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let optionsKey = Object.keys(optionsObj);\n        let question= this.props.queHandler[this.props.formID][this.props.queNo].question;\n\n\n\n\n        optionsObj[event.target.id] = event.target.value;\n\n\n        let optionInfo = {\n            type: \"multi\",\n\n            payload: {\n                data: {\n\n                    options: optionsObj,\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n    }\n\n    addOption() {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let question = this.props.queHandler[this.props.formID][this.props.queNo].question;\n\n    \n        let optionsKey = Object.keys(optionsObj);\n        optionsKey = parseInt(optionsKey[optionsKey.length - 1])\n      \n\n\n\n\n\n        let optionInfo = {\n            type: \"multi\",\n\n            payload: {\n                data: {\n\n                    options: { [optionsKey + 1]: \"Option\" },\n\n                    question,\n                },\n\n                formID: this.props.formID,\n                questionNo: this.props.queNo,\n\n\n            }\n\n\n        }\n        this.props.dispatchQueInfo(optionInfo);\n\n    }\n\n    removeOption(event) {\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let question = this.props.queHandler[this.props.formID][this.props.queNo].question;\n\n        let optionsKey = Object.keys(optionsObj);\n\n        if (optionsKey.length !== 1) {\n\n            delete optionsObj[event.target.id];\n\n            let optionInfo = {\n                type: \"multi\",\n\n                payload: {\n                    data: {\n\n                        options: optionsObj,\n\n                        question,\n                    },\n\n                    formID: this.props.formID,\n                    questionNo: this.props.queNo,\n\n\n                }\n\n\n            }\n            this.props.dispatchQueInfo(optionInfo);\n        }\n\n\n\n\n    }\n    render() {\n\n        // noOfOps = this.props.queHandler[this.props.formID][this.props.queNo].noOfOps\n        let optionsObj = this.props.queHandler[this.props.formID][this.props.queNo].options;\n        let optionsKey = Object.keys(optionsObj);\n\n\n        options = optionsKey.map((data, index) => {\n            return <Fragment>\n                <div key={data} id={data} class=\"form-check optionsCont\">\n                    <input class=\"form-check-input optionsIcon\" type=\"checkbox\" value=\"\" />\n                    <input type=\"text\" defaultValue={optionsObj[data]} id={data} onChange={this.handleOptionInfo} className=\"optionInput\"></input><button onClick={this.removeOption} id={data} class=\"btn shadow-none optionCancelBtn\">&#x2715;</button>\n\n                    {/* <input type=\"checkbox\" name=\"option\" ></input> */}\n                </div>\n\n            </Fragment>\n\n\n        })\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        return (<Fragment>\n            <div className=\"questionCont\">Q. <input type=\"text\" className=\"queInput\" name='question' onChange={this.handleQueInfo} defaultValue={queData.question}></input>\n            </div>\n\n\n            {options}\n            <button onClick={this.addOption} class=\"btn btn-primary shadow-none addOption\">Add Option</button>\n        </Fragment>\n\n        );\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(MultiTypeQue);","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/AdditionalTypeQue.js",["170","171","172","173"],"import React,{Fragment} from 'react';\nimport { queAction } from \"../actions/action.js\";\nimport { connect } from \"react-redux\";\n\nlet question, counter = 0;\n\nclass AdditionlTypeQue extends React.Component{\n\n    constructor(props) {\n        super(props)\n    \n        this.handleInfo = this.handleInfo.bind(this);\n\n\n\n    }\n  \n\n    handleInfo(event) {\n        question = event.target.value;\n        let queInfo = {\n            type: \"para\",\n            payload: {\n                data: { question },\n                formID: this.props.formID,\n                questionNo: this.props.queNo\n            }\n\n        }\n\n\n        this.props.dispatchQueInfo(queInfo);\n\n    }\n\n    render() {\n        let queData = this.props.queHandler[this.props.formID][this.props.queNo];\n\n        return (<Fragment>\n            {this.props.Type==\"email\"?<Fragment>\n            <div className=\"addQueCont\"> &nbsp;&nbsp;&nbsp;  email:<div className=\"addAnsCont\">example@gmail.com</div></div>\n            \n            </Fragment>:null}\n            {this.props.Type==\"tel\"?<Fragment>\n            <div className=\"addQueCont\">&nbsp;&nbsp;&nbsp;   phone no:<div className=\"addAnsCont\" >9000800055</div></div>\n            </Fragment>:null}\n        </Fragment>)\n\n\n\n}\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        queHandler: state.queHandler\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n\n        dispatchQueInfo: (para) => dispatch(queAction(para))\n\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(AdditionlTypeQue);\n\n\n\n\n            ","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/ControlPanel.js",["174","175"],"import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../css/controlPanelStyle.css';\nimport Confirmation from \"./Confirmation\";\nimport { formIdAction, resQueDetails } from \"../actions/action\";\nimport Formlink from './Formlink';\nimport axios from 'axios';\n\n\n\nclass ControlPanel extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handlePopupDisplay= this.handlePopupDisplay.bind(this);\n        this.getQuestions= this.getQuestions.bind(this);\n    }\n\n    getQuestions(){\n\n        axios.get(`https://form-maker-backend.herokuapp.com/form_creation_api/questionlist/`).then(res=>{\n            console.log('res.data', res.data);\n            console.log('res.data', res.data);\n\n            console.log('res.data', res.data);\n\n            let DBQuestions=res.data;\n            console.log('DBQuestions', DBQuestions)\n\n            axios.get(`https://form-maker-backend.herokuapp.com/form_creation_api/optionlist/`).\n            then(res =>{\n                console.log('res.data',res.data);\n                let Options= res.data;\n                console.log('DBQuestions', DBQuestions)\n                DBQuestions.forEach(individualQue => {\n                    console.log('INDISE  DBQuestions')\n                    if( this.props.formIDs[this.props.formID].urlKey===individualQue.title){\n                        console.log('INDISE  if',this.props.formIDs[this.props.formID].urlKey,individualQue.title)\n                        if(individualQue.question_type===\"text\"){\n\n                            this.props.dispatchResQueDetails({\n                                type:\"updateResQue\",\n                                payload:{\n                                    formUrlKey: individualQue.title,\n                                question: individualQue.question,\n                                queUrlKey: individualQue.question_id,\n                                queType: individualQue.question_type}\n                            })\n\n                            console.log('WEIRD', {\n                                type:\"updateResQue\",\n                                payload:{\n                                    formUrlKey: individualQue.title,\n                                question: individualQue.question,\n                                queUrlKey: individualQue.question_id,\n                                queType: individualQue.question_type}\n                            })\n\n\n                        }\n\n                        else{\n                            \n\n                            \n                            Options.forEach(individualOps=>{\n                                if(individualQue.question_id===individualOps.question){\n                                    delete individualOps.id;\n                                    delete individualOps.question;\n                                    \n                                    let singleQueOptions={};\n                                    for (const key in individualOps) {\n    \n                                       if(individualOps[key]===null){\n\n                                       }\n                                        else{\n\n                                            singleQueOptions[key]=individualOps[key]\n                                        } \n    \n                                        \n                                    }\n\n                                    this.props.dispatchResQueDetails({\n                                        type:'updateResOps',\n                                        payload:{\n                                            formUrlKey: individualQue.title,\n                                        question: individualQue.question,\n                                        queUrlKey: individualQue.question_id,\n                                        queType: individualQue.question_type,\n                                        options: singleQueOptions}\n                                    })\n\n\n                                    console.log('NICE', {\n                                        type:'updateResOps',\n                                        payload:{\n                                            formUrlKey: individualQue.title,\n                                        question: individualQue.question,\n                                        queUrlKey: individualQue.question_id,\n                                        queType: individualQue.question_type,\n                                        options: singleQueOptions}\n                                    })\n                                       \n                                }\n                            })\n                        }\n\n\n                    }\n    \n                    \n                });\n\n           \n            } )\n\n      \n\n      \n\n           \n        })\n        \n\n      \n    }\n\n    handlePopupDisplay(){\n\n        if(this.props.formIDs[this.props.formID].popupStatus==false){\n            \n            this.props.dispatchGenStatus({\n                type:'genConfirmation',\n                formID:this.props.formID,\n                payload:{popupStatus:true,loadingStatus:false,failureStatus:false}\n            })\n        }\n\n        else{\n            this.props.dispatchGenStatus({\n                type:'genConfirmation',\n                formID:this.props.formID,\n                payload:{popupStatus:false,loadingStatus:false,failureStatus:false}\n            })\n\n        }\n        \n        \n    }\n    componentDidMount(){\n        \n    }\n    \n    \n\n    render() {\n        console.log('this.props.queInfo[this.props.formID]', this.props.queInfo[this.props.formID])\n\n       \n        return (<Fragment>\n\n            <div className=\"controlPanel\">\n                <div className=\"pairCont\">\n                <Link  id=\"formBtn\" className=\"cntrlPanelBtns link active\"to={this.props.formPath}>Form</Link>\n               \n                {!this.props.formIDs[this.props.formID].genStatus?<Link  id=\"responseBtn\"  className=\"cntrlPanelBtns link\" to={`${this.props.formPath}/response`}>Response</Link>:null}\n                </div>\n                {this.props.formIDs[this.props.formID].genStatus?\n                \n                \n                    <Fragment> {Object.keys(this.props.queInfo[this.props.formID]).length!==1?<span id=\"genformBtn\" className=\"cntrlPanelBtns generateBtn genBtnActive\" onClick={this.handlePopupDisplay}>Generate Form</span>:<span id=\"genformBtn\" className=\"cntrlPanelBtns generateBtn disabled \" >Generate Form</span>}</Fragment>:<span className=\"sendBtn\" onClick={()=>{this.handlePopupDisplay();this.getQuestions()}}>Send<i class=\"material-icons sendIcon\" >send</i></span>}\n\n                </div>\n            \n            \n            {this.props.formIDs[this.props.formID].genStatus?<Confirmation formID= {this.props.formID} handlePopupDisplay={()=>this.handlePopupDisplay()}></Confirmation>:<Formlink formID= {this.props.formID} handlePopupDisplay={()=>this.handlePopupDisplay()}></Formlink>\n            \n            }\n\n            \n\n            </Fragment>\n        )\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n      formIDs: state.formHandler.formIDs,\n      queInfo: state.queHandler,\n    }\n  }\n  \n  const mapDispatchtoProps = (dispatch) => {\n    return {\n      dispatchGenStatus: (para) => dispatch(formIdAction(para)),\n      dispatchResQueDetails:(para)=> dispatch(resQueDetails(para)) \n    \n    }\n  }\n\n\n\n\nexport default connect(mapStatetoProps,mapDispatchtoProps) (ControlPanel);","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Response.js",["176"],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/homePage/Home.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Login.js",["177","178","179","180","181","182"],"import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport   '../css/loginPageStyle.css';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        \n    }\n\n\n    render() {\n        return (\n            <Fragment>\n\n\n\n<div className=\"loginContainer\">\n        {/* <div className=\"row\">\n\t\t\t<div className=\"col-md-5 mx-auto box\"> */}\n\t\t\t    <div id=\"first\">\n\t\t\t\t    <div className=\"myform form \">\n\t\t\t\t\t    <div className=\"logo mb-3\">\n\t\t\t\t\t\t    <div className=\"col-md-12 text-center\">\n\t\t\t\t\t\t\t    <h1>Login</h1>\n                            </div>\n                        </div>\n                    \n                   <form action=\"\" method=\"post\" name=\"login\">\n                           <div className=\"form-group\">\n                              <label for=\"exampleInputEmail1\">Email address</label>\n                              <input type=\"email\" name=\"email\"  className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n                           </div>\n                           <div className=\"form-group\">\n                              <label for=\"exampleInputEmail1\">Password</label>\n                              <input type=\"password\" name=\"password\" id=\"password\"  className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter Password\"/>\n                           </div>\n                           \n                           <div className=\"col-md-12 text-center \">\n                              <button type=\"submit\" className=\" btn btn-block mybtn btn-primary tx-tfm\">Login</button>\n                           </div>\n                           <div className=\"col-md-12 \">\n                              <div className=\"login-or\">\n                                 <hr className=\"hr-or\"/>\n                                 <span className=\"span-or\">or</span>\n                              </div>\n                           </div>\n                           <div className=\"col-md-12 mb-3\">\n                              <p className=\"text-center\">\n                                 <a href=\"javascript:void();\" className=\"google btn mybtn\"><i className=\"fa fa-google-plus\">\n                                 </i> Signup using Google\n                                 </a>\n                              </p>\n                           </div>\n                           <div className=\"form-group\">\n                              <p className=\"text-center\">Don't have account? <Link to=\"/signup\" id=\"signup\">Sign up here</Link></p>\n                           </div>\n                        \n                        \n                    </form>\n                    </div>\n                 \n\t\t\t\t{/* </div>\n\t\t\t</div> */}\n\t\t\t\n            \n            \n           \n\t\t</div>\n</div>   \n         \n\n\n            </Fragment>\n        )\n    }\n    \n}\n\n\nexport default Login; ","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/loginHandler/Signup.js",["183","184","185","186"],"import React, { Fragment } from \"react\";\nimport   '../css/loginPageStyle.css';\n\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\n\nclass Signup extends React.Component {\n    constructor(props) {\n        super(props)\n\n        \n    }\n\n\n    render() {\n        return (\n            <Fragment>\n\n\n\n<div className=\"loginContainer\">\n        {/* <div className=\"row\">\n\t\t\t<div className=\"col-md-5 mx-auto box\"> */}\n\n                <div id=\"second\">\n\t\t\t      <div className=\"myform form \">\n                        <div className=\"logo mb-3\">\n                           <div className=\"col-md-12 text-center\">\n                              <h1 >Signup</h1>\n                           </div>\n                        </div>\n                        <form action=\"#\" name=\"registration\">\n                           <div className=\"form-group\">\n                              <label for=\"exampleInputEmail1\">User name</label>\n                              <input type=\"text\"  name=\"firstname\" className=\"form-control\" id=\"firstname\" aria-describedby=\"emailHelp\" placeholder=\"Enter username\"/>\n                           </div>\n                           \n                           <div className=\"form-group\">\n                              <label for=\"exampleInputEmail1\">Email address</label>\n                              <input type=\"email\" name=\"email\"  className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n                           </div>\n                           <div className=\"form-group\">\n                              <label for=\"exampleInputEmail1\">Password</label>\n                              <input type=\"password\" name=\"password\" id=\"password\"  className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter Password\"/>\n                           </div>\n                           <div className=\"col-md-12 text-center mb-3\">\n                              <button type=\"submit\" className=\" btn btn-block mybtn btn-primary tx-tfm\">Create New Account</button>\n                           </div>\n                           <div className=\"col-md-12 \">\n                              <div className=\"form-group\">\n                                 <p className=\"text-center\"><Link to=\"/login\" id=\"signin\">Already have an account?</Link></p>\n                              </div>\n                           </div>\n                            \n                        </form>\n                     </div>\n\t\t\t    {/* </div>\n\t\t\t    \n\t\t\t</div> */}\n\t\t\t\n            \n            \n            \n\t\t</div>\n</div>   \n         \n\n\n            </Fragment>\n        )\n    }\n    \n}\n\n\nexport default Signup; ","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Confirmation.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/formHandler/Formlink.js",["187","188"],"import React, { Fragment } from \"react\";\nimport \"../css/popupStyle.css\";\nimport { formIdAction } from \"../actions/action\";\nimport {connect} from \"react-redux\";\n\n\n\nclass Formlink extends React.Component{\n    constructor(props) {\n        super(props)\n    \n       \n    }\n\n\n    render(){\n        let status= this.props.formIDs[this.props.formID].popupStatus;\n        let formlink= `https://form-maker-backend.herokuapp.com/${this.props.formIDs[this.props.formID].urlKey}`;\n        \n        return (<Fragment>\n            { status?  \n                \n             <div className=\"popup-box\">\n              <div className=\"box\">\n                  <span className=\"close-icon\" onClick={this.props.handlePopupDisplay}>x</span>\n                  <p className=\"textCont\">Send the generated form link:</p>\n                  <p className=\"linkCont\">{formlink}</p>\n                 \n                 \n                </div>\n              </div>:null\n            }\n            </Fragment>\n        )\n    }\n    \n}\n\n\nconst mapStatetoProps = (state) => {\n    return {\n      formIDs: state.formHandler.formIDs,\n      \n    \n    }\n  }\n  \n\n  \n  export default connect(mapStatetoProps)(Formlink);\n\n","/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/resQueUpdate.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/usersResponses.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/formUserData.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/resLoadingHandler.js",[],"/media/gaurav/9AA2FF5D8F558D98/react/Form-Maker-App/Form-Maker-App/src/reducers/reviewHandler.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":87,"column":31,"nodeType":"199","messageId":"200","endLine":87,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":139,"column":32,"nodeType":"199","messageId":"200","endLine":139,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":103},{"ruleId":"193","severity":1,"message":"205","line":6,"column":24,"nodeType":"195","messageId":"196","endLine":6,"endColumn":31},{"ruleId":"193","severity":1,"message":"206","line":12,"column":50,"nodeType":"195","messageId":"196","endLine":12,"endColumn":54},{"ruleId":"207","severity":1,"message":"208","line":25,"column":62,"nodeType":"199","messageId":"209","endLine":25,"endColumn":64},{"ruleId":"207","severity":1,"message":"208","line":141,"column":62,"nodeType":"199","messageId":"209","endLine":141,"endColumn":64},{"ruleId":"207","severity":1,"message":"208","line":142,"column":65,"nodeType":"199","messageId":"209","endLine":142,"endColumn":67},{"ruleId":"210","severity":1,"message":"211","line":6,"column":5,"nodeType":"212","messageId":"213","endLine":8,"endColumn":6},{"ruleId":"193","severity":1,"message":"214","line":14,"column":13,"nodeType":"195","messageId":"196","endLine":14,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":16,"column":64,"nodeType":"217","messageId":"218","endLine":16,"endColumn":66},{"ruleId":"207","severity":1,"message":"208","line":21,"column":36,"nodeType":"199","messageId":"209","endLine":21,"endColumn":38},{"ruleId":"207","severity":1,"message":"208","line":32,"column":36,"nodeType":"199","messageId":"209","endLine":32,"endColumn":38},{"ruleId":"207","severity":1,"message":"208","line":32,"column":69,"nodeType":"199","messageId":"209","endLine":32,"endColumn":71},{"ruleId":"189","replacedBy":"219"},{"ruleId":"191","replacedBy":"220"},{"ruleId":"193","severity":1,"message":"221","line":2,"column":5,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"222","line":2,"column":16,"nodeType":"195","messageId":"196","endLine":2,"endColumn":24},{"ruleId":"193","severity":1,"message":"223","line":2,"column":26,"nodeType":"195","messageId":"196","endLine":2,"endColumn":33},{"ruleId":"193","severity":1,"message":"224","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":16},{"ruleId":"193","severity":1,"message":"225","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":60,"column":45,"nodeType":"217","messageId":"218","endLine":60,"endColumn":47},{"ruleId":"207","severity":1,"message":"208","line":61,"column":29,"nodeType":"199","messageId":"209","endLine":61,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":74,"column":23,"nodeType":"228","endLine":74,"endColumn":130},{"ruleId":"226","severity":1,"message":"227","line":76,"column":23,"nodeType":"228","endLine":76,"endColumn":132},{"ruleId":"226","severity":1,"message":"227","line":78,"column":23,"nodeType":"228","endLine":78,"endColumn":138},{"ruleId":"207","severity":1,"message":"208","line":88,"column":67,"nodeType":"199","messageId":"209","endLine":88,"endColumn":69},{"ruleId":"207","severity":1,"message":"208","line":92,"column":67,"nodeType":"199","messageId":"209","endLine":92,"endColumn":69},{"ruleId":"207","severity":1,"message":"208","line":96,"column":67,"nodeType":"199","messageId":"209","endLine":96,"endColumn":69},{"ruleId":"193","severity":1,"message":"229","line":7,"column":6,"nodeType":"195","messageId":"196","endLine":7,"endColumn":10},{"ruleId":"193","severity":1,"message":"230","line":7,"column":21,"nodeType":"195","messageId":"196","endLine":7,"endColumn":28},{"ruleId":"193","severity":1,"message":"231","line":51,"column":13,"nodeType":"195","messageId":"196","endLine":51,"endColumn":23},{"ruleId":"193","severity":1,"message":"223","line":5,"column":15,"nodeType":"195","messageId":"196","endLine":5,"endColumn":22},{"ruleId":"193","severity":1,"message":"229","line":5,"column":6,"nodeType":"195","messageId":"196","endLine":5,"endColumn":10},{"ruleId":"193","severity":1,"message":"230","line":5,"column":21,"nodeType":"195","messageId":"196","endLine":5,"endColumn":28},{"ruleId":"193","severity":1,"message":"231","line":50,"column":13,"nodeType":"195","messageId":"196","endLine":50,"endColumn":23},{"ruleId":"193","severity":1,"message":"223","line":5,"column":15,"nodeType":"195","messageId":"196","endLine":5,"endColumn":22},{"ruleId":"193","severity":1,"message":"232","line":37,"column":13,"nodeType":"195","messageId":"196","endLine":37,"endColumn":20},{"ruleId":"207","severity":1,"message":"208","line":40,"column":29,"nodeType":"199","messageId":"209","endLine":40,"endColumn":31},{"ruleId":"207","severity":1,"message":"208","line":44,"column":29,"nodeType":"199","messageId":"209","endLine":44,"endColumn":31},{"ruleId":"233","severity":1,"message":"234","line":30,"column":96,"nodeType":"235","messageId":"236","endLine":30,"endColumn":97,"fix":"237"},{"ruleId":"207","severity":1,"message":"208","line":132,"column":61,"nodeType":"199","messageId":"209","endLine":132,"endColumn":63},{"ruleId":"215","severity":1,"message":"216","line":390,"column":112,"nodeType":"217","messageId":"218","endLine":390,"endColumn":114},{"ruleId":"193","severity":1,"message":"238","line":2,"column":27,"nodeType":"195","messageId":"196","endLine":2,"endColumn":33},{"ruleId":"193","severity":1,"message":"239","line":2,"column":41,"nodeType":"195","messageId":"196","endLine":2,"endColumn":46},{"ruleId":"193","severity":1,"message":"240","line":2,"column":48,"nodeType":"195","messageId":"196","endLine":2,"endColumn":54},{"ruleId":"210","severity":1,"message":"211","line":8,"column":5,"nodeType":"212","messageId":"213","endLine":12,"endColumn":6},{"ruleId":"226","severity":1,"message":"241","line":53,"column":34,"nodeType":"228","endLine":53,"endColumn":92},{"ruleId":"242","severity":1,"message":"243","line":53,"column":42,"nodeType":"244","messageId":"245","endLine":53,"endColumn":62},{"ruleId":"193","severity":1,"message":"238","line":4,"column":27,"nodeType":"195","messageId":"196","endLine":4,"endColumn":33},{"ruleId":"193","severity":1,"message":"239","line":4,"column":41,"nodeType":"195","messageId":"196","endLine":4,"endColumn":46},{"ruleId":"193","severity":1,"message":"240","line":4,"column":48,"nodeType":"195","messageId":"196","endLine":4,"endColumn":54},{"ruleId":"210","severity":1,"message":"211","line":8,"column":5,"nodeType":"212","messageId":"213","endLine":12,"endColumn":6},{"ruleId":"193","severity":1,"message":"246","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":9,"column":5,"nodeType":"212","messageId":"213","endLine":13,"endColumn":6},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'queType' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'arrayType' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["247"],["248"],"'somearray' is defined but never used.","'newarray' is defined but never used.","'counter' is assigned a value but never used.","'ReactDOM' is defined but never used.","'AdditionalTypeQue' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'opId' is defined but never used.","'noOfOps' is assigned a value but never used.","'optionsKey' is assigned a value but never used.","'queData' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"249","text":"250"},"'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'formIdAction' is defined but never used.","no-global-assign","no-unsafe-negation",[1013,1027],"\n            ."]